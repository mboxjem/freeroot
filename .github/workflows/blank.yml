name: Build Custom PRoot Environment

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Determine Next Tag
      id: get_next_tag
      run: |
        git fetch --tags
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
        IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
        major=${version_parts[0]}
        minor=${version_parts[1]}
        patch=${version_parts[2]}
        new_patch=$((patch + 1))
        new_tag="v$major.$minor.$new_patch"
        echo "::set-output name=tag::$new_tag"

    - name: Create and Push Tag
      run: |
        new_tag=${{ steps.get_next_tag.outputs.tag }}
        git tag "$new_tag"
        git push origin "$new_tag"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget tar

    - name: Set up root filesystem
      run: |
        ROOTFS_DIR="./proot-rootfs"
        UBUNTU_VERSION="22.04"
        ARCH=$(uname -m)
        UBUNTU_BASE_URL="http://cdimage.ubuntu.com/ubuntu-base/releases/$UBUNTU_VERSION/release"

        wget https://raw.githubusercontent.com/mboxjem/freeroot/main/proot-$ARCH -O ./proot
        chmod +x ./proot

        mkdir -p "$ROOTFS_DIR"

        case "$ARCH" in
          x86_64) ARCH_ALT=amd64 ;;
          aarch64) ARCH_ALT=arm64 ;;
          *) echo "Unsupported CPU architecture: $ARCH"; exit 1 ;;
        esac

        wget "$UBUNTU_BASE_URL/ubuntu-base-$UBUNTU_VERSION-base-$ARCH_ALT.tar.gz" -O /tmp/rootfs.tar.gz
        tar -xf /tmp/rootfs.tar.gz -C "$ROOTFS_DIR"

    - name: Configure and install packages in rootfs
      run: |
        ROOTFS_DIR="./proot-rootfs"
        echo -e "nameserver 1.1.1.1\nnameserver 1.0.0.1\nnameserver 8.8.8.8\nnameserver 8.8.4.4" \
          > "$ROOTFS_DIR/etc/resolv.conf"

        ./proot -R "$ROOTFS_DIR" /bin/sh -c "
          export DEBIAN_FRONTEND=noninteractive && \
          mkdir -p /dev /proc && \
          touch /proc/meminfo /proc/cpuinfo /proc/stat /proc/uptime && \
          echo '0 0 0 0' > /proc/stat && \
          apt-get update -y && \
          apt-get install -y wget libsodium-dev libcurl4-openssl-dev libssl-dev libjansson-dev libomp5 && \
          apt-get clean && rm -rf /var/lib/apt/lists/*"

    - name: Package the root filesystem
      run: |
        ROOTFS_DIR="./proot-rootfs"
        OUTPUT_TAR="./custom-proot.tar.gz"
        tar -czf "$OUTPUT_TAR" --exclude="$OUTPUT_TAR" \
          --exclude="$ROOTFS_DIR/proc/*" --exclude="$ROOTFS_DIR/sys/*" \
          --exclude="$ROOTFS_DIR/dev/*" "$ROOTFS_DIR"

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: custom-proot.tar.gz
        tag: ${{ steps.get_next_tag.outputs.tag }}
        token: ${{ secrets.GITHUB_TOKEN }}
